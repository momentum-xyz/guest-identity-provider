name: build-deploy

on:
  push:
    branches:
      - develop
      - master

    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          check-latest: true
      - id: go-test
        name: Go tests
        run: go test -coverprofile=output/coverage.out ./...
  build:
    needs: test
    runs-on: self-hosted  # ubuntu-latest
    steps:
      - id: build
        uses: OdysseyMomentumExperience/docker-build-action@v3
        with:
          registry-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-user: ${{ secrets.REGISTRY_USERNAME }}
          registry-pass: ${{ secrets.REGISTRY_PASSWORD }}
    outputs:
      version: ${{ steps.build.outputs.version }}
  dev-deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/develop'}}
    steps:
      - id: deploy-dev
        uses: OdysseyMomentumExperience/deploy-action@v1
        with:
          version: ${{ env.VERSION }}
          k8s-credentials: ${{ secrets[secrets.REF_K8S_DEV] }}
  ops-deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      VERSION: ${{ needs.build.outputs.version }}
    steps:
      - id: deploy-ops
        name: Dispatch to Operations
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ODYSSEY_OPERATIONS }}
          repository: OdysseyMomentumExperience/Operations
          event-type: make-acc-pr
          client-payload: '{"name": "${{ env.PROJECT_NAME }}", "version": "${{ env.VERSION }}", "actor": "${{ github.event.actor.login }}"}'
